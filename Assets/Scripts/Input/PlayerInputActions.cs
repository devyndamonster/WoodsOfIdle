//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Input/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""8f82b1d5-28d2-4c86-99ac-52f26cf09a42"",
            ""actions"": [
                {
                    ""name"": ""PointerPressed"",
                    ""type"": ""Button"",
                    ""id"": ""b49cd141-45e0-4c3d-afa4-485dafd76249"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PointerMoved"",
                    ""type"": ""Value"",
                    ""id"": ""fce00f3a-7cde-448b-afac-c814b5a7068c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseScrolled"",
                    ""type"": ""Value"",
                    ""id"": ""5f6baa16-23f4-4446-a083-0664acb0c273"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondTouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""86cee61a-259e-4d29-ba15-c7dfac0ba432"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondTouchMoved"",
                    ""type"": ""Value"",
                    ""id"": ""fd45b6ad-f870-4594-8bfa-ee385a0a0d5a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6d0a3c63-cf94-4f83-844b-665e3521219b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18d0b58c-ee00-4fb0-be66-c572e66ce61f"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0572e01-0199-4bbb-9fe7-12557ea734c4"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerMoved"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""234c5e10-66cb-4e31-aba9-fbc9830da7e0"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerMoved"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""acb81975-ed80-43e8-bf1a-34d627aefbfd"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScrolled"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""512de2c5-fe1f-426d-898c-38c362f14d86"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondTouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2213663-4ae8-499d-9062-097b554f1716"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondTouchMoved"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_PointerPressed = m_Player.FindAction("PointerPressed", throwIfNotFound: true);
        m_Player_PointerMoved = m_Player.FindAction("PointerMoved", throwIfNotFound: true);
        m_Player_MouseScrolled = m_Player.FindAction("MouseScrolled", throwIfNotFound: true);
        m_Player_SecondTouchContact = m_Player.FindAction("SecondTouchContact", throwIfNotFound: true);
        m_Player_SecondTouchMoved = m_Player.FindAction("SecondTouchMoved", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_PointerPressed;
    private readonly InputAction m_Player_PointerMoved;
    private readonly InputAction m_Player_MouseScrolled;
    private readonly InputAction m_Player_SecondTouchContact;
    private readonly InputAction m_Player_SecondTouchMoved;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @PointerPressed => m_Wrapper.m_Player_PointerPressed;
        public InputAction @PointerMoved => m_Wrapper.m_Player_PointerMoved;
        public InputAction @MouseScrolled => m_Wrapper.m_Player_MouseScrolled;
        public InputAction @SecondTouchContact => m_Wrapper.m_Player_SecondTouchContact;
        public InputAction @SecondTouchMoved => m_Wrapper.m_Player_SecondTouchMoved;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @PointerPressed.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPointerPressed;
                @PointerPressed.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPointerPressed;
                @PointerPressed.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPointerPressed;
                @PointerMoved.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPointerMoved;
                @PointerMoved.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPointerMoved;
                @PointerMoved.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPointerMoved;
                @MouseScrolled.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseScrolled;
                @MouseScrolled.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseScrolled;
                @MouseScrolled.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouseScrolled;
                @SecondTouchContact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSecondTouchContact;
                @SecondTouchContact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSecondTouchContact;
                @SecondTouchContact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSecondTouchContact;
                @SecondTouchMoved.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSecondTouchMoved;
                @SecondTouchMoved.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSecondTouchMoved;
                @SecondTouchMoved.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSecondTouchMoved;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PointerPressed.started += instance.OnPointerPressed;
                @PointerPressed.performed += instance.OnPointerPressed;
                @PointerPressed.canceled += instance.OnPointerPressed;
                @PointerMoved.started += instance.OnPointerMoved;
                @PointerMoved.performed += instance.OnPointerMoved;
                @PointerMoved.canceled += instance.OnPointerMoved;
                @MouseScrolled.started += instance.OnMouseScrolled;
                @MouseScrolled.performed += instance.OnMouseScrolled;
                @MouseScrolled.canceled += instance.OnMouseScrolled;
                @SecondTouchContact.started += instance.OnSecondTouchContact;
                @SecondTouchContact.performed += instance.OnSecondTouchContact;
                @SecondTouchContact.canceled += instance.OnSecondTouchContact;
                @SecondTouchMoved.started += instance.OnSecondTouchMoved;
                @SecondTouchMoved.performed += instance.OnSecondTouchMoved;
                @SecondTouchMoved.canceled += instance.OnSecondTouchMoved;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnPointerPressed(InputAction.CallbackContext context);
        void OnPointerMoved(InputAction.CallbackContext context);
        void OnMouseScrolled(InputAction.CallbackContext context);
        void OnSecondTouchContact(InputAction.CallbackContext context);
        void OnSecondTouchMoved(InputAction.CallbackContext context);
    }
}
